name: Multiarch checks

on:
  pull_request:
    branches: [ develop, master ]
  push:
    branches: [ develop, master ]
    paths-ignore:
      - 'doygen/**'
      - 'hooks/**'
      - 'licenses/**'
      - 'LICENSE.md'
      - 'README.md'
      - 'RELEASE-NOTES.txt'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  multiarch-prim-rev:
    name: ${{ matrix.config.platform }} - ${{ matrix.config.folder }} ${{ matrix.config.batch }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        config:
          - { platform: arm/v6, folder: prim/fun,  batch: 0}
          - { platform: arm/v6, folder: prim/fun,  batch: 1}
          - { platform: arm/v6, folder: prim/fun,  batch: 2}
          - { platform: arm/v6, folder: prim/fun,  batch: 3}
          - { platform: arm/v6, folder: prim/fun,  batch: 4}
          - { platform: arm/v6, folder: prim/fun,  batch: 5}
          - { platform: arm/v6, folder: prim/fun,  batch: 6}
          - { platform: arm/v6, folder: prim/fun,  batch: 7}
          - { platform: arm/v6, folder: prim/fun,  batch: 8}
          - { platform: arm/v6, folder: prim/fun,  batch: 9}

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: addnab/docker-run-action@v3
        with:
          image: debian:sid-slim
          options: -v ${{ github.workspace }}:/work --platform linux/${{ matrix.config.platform }} -e DEBIAN_FRONTEND=noninteractive
          run: |
            apt-get update && apt-get install -y build-essential python-is-python3
            cd /work
            PrimTests=(test/unit/math/prim/fun/*.cpp)
            NTests=${#PrimTests[@]}
            TestsPerBatch="$(($NTests / 10))"
            StartOfBatch="$((${{ matrix.config.batch }} * $TestsPerBatch))"
            # Compile and run in sub-batches of 5 to fail faster
            echo "${PrimTests[@]:${StartOfBatch}:${TestsPerBatch}}" | xargs -n 5 python ./runTests.py -j2
          shell: bash
